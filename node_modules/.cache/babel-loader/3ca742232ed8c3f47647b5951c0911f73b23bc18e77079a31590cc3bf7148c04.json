{"ast":null,"code":"/*\nCopyright 2021 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nconst url = require('url');\nconst originalFetch = require('node-fetch');\nconst {\n  getProxyForUrl\n} = require('proxy-from-env');\nconst loggerNamespace = '@adobe/aio-lib-core-networking/utils';\nconst logger = require('@adobe/aio-lib-core-logging')(loggerNamespace, {\n  level: process.env.LOG_LEVEL\n});\n\n/* global ProxyAuthOptions */\n\n/**\n * Return the appropriate Fetch function depending on proxy settings.\n *\n * @param {ProxyAuthOptions} [proxyAuthOptions] the proxy auth options\n * @returns {Function} the Fetch API function\n */\nfunction createFetch(proxyAuthOptions) {\n  const fn = async (resource, options) => {\n    // proxyAuthOptions as a parameter will override any proxy env vars\n    if (!proxyAuthOptions) {\n      const proxyUrl = getProxyForUrl(resource);\n      if (proxyUrl) {\n        proxyAuthOptions = {\n          proxyUrl\n        };\n      }\n    }\n    if (proxyAuthOptions) {\n      logger.debug(`createFetch: proxy url found ${proxyAuthOptions.proxyUrl} for url ${resource}`);\n      // in this closure: for fetch-retry, if we don't require it dynamically here, ProxyFetch will be an empty object\n      const ProxyFetch = require('./ProxyFetch');\n      const proxyFetch = new ProxyFetch(proxyAuthOptions);\n      return proxyFetch.fetch(resource, options);\n    } else {\n      logger.debug('createFetch: proxy url not found, using plain fetch');\n      return originalFetch(resource, options);\n    }\n  };\n  const {\n    Request,\n    Response,\n    Headers\n  } = originalFetch;\n  fn.Request = Request;\n  fn.Response = Response;\n  fn.Headers = Headers;\n  return fn;\n}\n\n/**\n * Converts a URL to a suitable object for http request options.\n *\n * @private\n * @param {string} aUrl the url to parse\n * @returns {object} an object to pass for http request options\n */\nfunction urlToHttpOptions(aUrl) {\n  if (!aUrl) {\n    return {};\n  }\n\n  // URL.urlToHttpOptions is only in node 15 or greater\n  const {\n    protocol,\n    hostname,\n    hash,\n    search,\n    pathname,\n    path,\n    href,\n    username,\n    password,\n    port\n  } = new url.URL(aUrl);\n  const options = {\n    protocol,\n    hostname,\n    hash,\n    search,\n    pathname,\n    path,\n    href,\n    port\n  };\n  if (username && password) {\n    options.auth = `${username}:${password}`;\n  }\n  return options;\n}\nmodule.exports = {\n  urlToHttpOptions,\n  createFetch\n};","map":{"version":3,"names":["url","require","originalFetch","getProxyForUrl","loggerNamespace","logger","level","process","env","LOG_LEVEL","createFetch","proxyAuthOptions","fn","resource","options","proxyUrl","debug","ProxyFetch","proxyFetch","fetch","Request","Response","Headers","urlToHttpOptions","aUrl","protocol","hostname","hash","search","pathname","path","href","username","password","port","URL","auth","module","exports"],"sources":["/Users/josiah.huckins/Development/Perficient Blogging/react/aem-navigation-app/node_modules/@adobe/aio-lib-core-networking/src/utils.js"],"sourcesContent":["/*\nCopyright 2021 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nconst url = require('url')\nconst originalFetch = require('node-fetch')\nconst { getProxyForUrl } = require('proxy-from-env')\nconst loggerNamespace = '@adobe/aio-lib-core-networking/utils'\nconst logger = require('@adobe/aio-lib-core-logging')(loggerNamespace, { level: process.env.LOG_LEVEL })\n\n/* global ProxyAuthOptions */\n\n/**\n * Return the appropriate Fetch function depending on proxy settings.\n *\n * @param {ProxyAuthOptions} [proxyAuthOptions] the proxy auth options\n * @returns {Function} the Fetch API function\n */\nfunction createFetch (proxyAuthOptions) {\n  const fn = async (resource, options) => {\n    // proxyAuthOptions as a parameter will override any proxy env vars\n    if (!proxyAuthOptions) {\n      const proxyUrl = getProxyForUrl(resource)\n      if (proxyUrl) {\n        proxyAuthOptions = { proxyUrl }\n      }\n    }\n\n    if (proxyAuthOptions) {\n      logger.debug(`createFetch: proxy url found ${proxyAuthOptions.proxyUrl} for url ${resource}`)\n      // in this closure: for fetch-retry, if we don't require it dynamically here, ProxyFetch will be an empty object\n      const ProxyFetch = require('./ProxyFetch')\n      const proxyFetch = new ProxyFetch(proxyAuthOptions)\n      return proxyFetch.fetch(resource, options)\n    } else {\n      logger.debug('createFetch: proxy url not found, using plain fetch')\n      return originalFetch(resource, options)\n    }\n  }\n  const { Request, Response, Headers } = originalFetch\n  fn.Request = Request\n  fn.Response = Response\n  fn.Headers = Headers\n  return fn\n}\n\n/**\n * Converts a URL to a suitable object for http request options.\n *\n * @private\n * @param {string} aUrl the url to parse\n * @returns {object} an object to pass for http request options\n */\nfunction urlToHttpOptions (aUrl) {\n  if (!aUrl) {\n    return {}\n  }\n\n  // URL.urlToHttpOptions is only in node 15 or greater\n  const { protocol, hostname, hash, search, pathname, path, href, username, password, port } = new url.URL(aUrl)\n  const options = {\n    protocol,\n    hostname,\n    hash,\n    search,\n    pathname,\n    path,\n    href,\n    port\n  }\n\n  if (username && password) {\n    options.auth = `${username}:${password}`\n  }\n  return options\n}\n\nmodule.exports = {\n  urlToHttpOptions,\n  createFetch\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMA,GAAG,GAAGC,OAAO,CAAC,KAAK,CAAC;AAC1B,MAAMC,aAAa,GAAGD,OAAO,CAAC,YAAY,CAAC;AAC3C,MAAM;EAAEE;AAAe,CAAC,GAAGF,OAAO,CAAC,gBAAgB,CAAC;AACpD,MAAMG,eAAe,GAAG,sCAAsC;AAC9D,MAAMC,MAAM,GAAGJ,OAAO,CAAC,6BAA6B,CAAC,CAACG,eAAe,EAAE;EAAEE,KAAK,EAAEC,OAAO,CAACC,GAAG,CAACC;AAAU,CAAC,CAAC;;AAExG;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,WAAWA,CAAEC,gBAAgB,EAAE;EACtC,MAAMC,EAAE,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,OAAO,KAAK;IACtC;IACA,IAAI,CAACH,gBAAgB,EAAE;MACrB,MAAMI,QAAQ,GAAGZ,cAAc,CAACU,QAAQ,CAAC;MACzC,IAAIE,QAAQ,EAAE;QACZJ,gBAAgB,GAAG;UAAEI;QAAS,CAAC;MACjC;IACF;IAEA,IAAIJ,gBAAgB,EAAE;MACpBN,MAAM,CAACW,KAAK,CAAE,gCAA+BL,gBAAgB,CAACI,QAAS,YAAWF,QAAS,EAAC,CAAC;MAC7F;MACA,MAAMI,UAAU,GAAGhB,OAAO,CAAC,cAAc,CAAC;MAC1C,MAAMiB,UAAU,GAAG,IAAID,UAAU,CAACN,gBAAgB,CAAC;MACnD,OAAOO,UAAU,CAACC,KAAK,CAACN,QAAQ,EAAEC,OAAO,CAAC;IAC5C,CAAC,MAAM;MACLT,MAAM,CAACW,KAAK,CAAC,qDAAqD,CAAC;MACnE,OAAOd,aAAa,CAACW,QAAQ,EAAEC,OAAO,CAAC;IACzC;EACF,CAAC;EACD,MAAM;IAAEM,OAAO;IAAEC,QAAQ;IAAEC;EAAQ,CAAC,GAAGpB,aAAa;EACpDU,EAAE,CAACQ,OAAO,GAAGA,OAAO;EACpBR,EAAE,CAACS,QAAQ,GAAGA,QAAQ;EACtBT,EAAE,CAACU,OAAO,GAAGA,OAAO;EACpB,OAAOV,EAAE;AACX;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASW,gBAAgBA,CAAEC,IAAI,EAAE;EAC/B,IAAI,CAACA,IAAI,EAAE;IACT,OAAO,CAAC,CAAC;EACX;;EAEA;EACA,MAAM;IAAEC,QAAQ;IAAEC,QAAQ;IAAEC,IAAI;IAAEC,MAAM;IAAEC,QAAQ;IAAEC,IAAI;IAAEC,IAAI;IAAEC,QAAQ;IAAEC,QAAQ;IAAEC;EAAK,CAAC,GAAG,IAAIlC,GAAG,CAACmC,GAAG,CAACX,IAAI,CAAC;EAC9G,MAAMV,OAAO,GAAG;IACdW,QAAQ;IACRC,QAAQ;IACRC,IAAI;IACJC,MAAM;IACNC,QAAQ;IACRC,IAAI;IACJC,IAAI;IACJG;EACF,CAAC;EAED,IAAIF,QAAQ,IAAIC,QAAQ,EAAE;IACxBnB,OAAO,CAACsB,IAAI,GAAI,GAAEJ,QAAS,IAAGC,QAAS,EAAC;EAC1C;EACA,OAAOnB,OAAO;AAChB;AAEAuB,MAAM,CAACC,OAAO,GAAG;EACff,gBAAgB;EAChBb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
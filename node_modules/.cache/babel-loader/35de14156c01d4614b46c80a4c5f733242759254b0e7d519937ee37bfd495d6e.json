{"ast":null,"code":"/* eslint-disable complexity,max-statements */\n/**\n * file.js: Transport for outputting to a local log file.\n *\n * (C) 2010 Charlie Robbins\n * MIT LICENCE\n */\n\n'use strict';\n\nfunction _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : String(i);\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nfunction _callSuper(t, o, e) {\n  return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return _assertThisInitialized(self);\n}\nfunction _isNativeReflectConstruct() {\n  try {\n    var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n  } catch (t) {}\n  return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {\n    return !!t;\n  })();\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nvar fs = require('fs');\nvar path = require('path');\nvar asyncSeries = require('async/series');\nvar zlib = require('zlib');\nvar _require = require('triple-beam'),\n  MESSAGE = _require.MESSAGE;\nvar _require2 = require('readable-stream'),\n  Stream = _require2.Stream,\n  PassThrough = _require2.PassThrough;\nvar TransportStream = require('winston-transport');\nvar debug = require('@dabh/diagnostics')('winston:file');\nvar os = require('os');\nvar tailFile = require('../tail-file');\n\n/**\n * Transport for outputting to a local log file.\n * @type {File}\n * @extends {TransportStream}\n */\nmodule.exports = /*#__PURE__*/function (_TransportStream) {\n  _inherits(File, _TransportStream);\n  /**\n   * Constructor function for the File transport object responsible for\n   * persisting log messages and metadata to one or more files.\n   * @param {Object} options - Options for this instance.\n   */\n  function File() {\n    var _this;\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _classCallCheck(this, File);\n    _this = _callSuper(this, File, [options]);\n\n    // Expose the name of this Transport on the prototype.\n    _this.name = options.name || 'file';\n\n    // Helper function which throws an `Error` in the event that any of the\n    // rest of the arguments is present in `options`.\n    function throwIf(target) {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n      args.slice(1).forEach(function (name) {\n        if (options[name]) {\n          throw new Error(\"Cannot set \".concat(name, \" and \").concat(target, \" together\"));\n        }\n      });\n    }\n\n    // Setup the base stream that always gets piped to to handle buffering.\n    _this._stream = new PassThrough();\n    _this._stream.setMaxListeners(30);\n\n    // Bind this context for listener methods.\n    _this._onError = _this._onError.bind(_assertThisInitialized(_this));\n    if (options.filename || options.dirname) {\n      throwIf('filename or dirname', 'stream');\n      _this._basename = _this.filename = options.filename ? path.basename(options.filename) : 'winston.log';\n      _this.dirname = options.dirname || path.dirname(options.filename);\n      _this.options = options.options || {\n        flags: 'a'\n      };\n    } else if (options.stream) {\n      // eslint-disable-next-line no-console\n      console.warn('options.stream will be removed in winston@4. Use winston.transports.Stream');\n      throwIf('stream', 'filename', 'maxsize');\n      _this._dest = _this._stream.pipe(_this._setupStream(options.stream));\n      _this.dirname = path.dirname(_this._dest.path);\n      // We need to listen for drain events when write() returns false. This\n      // can make node mad at times.\n    } else {\n      throw new Error('Cannot log to file without filename or stream.');\n    }\n    _this.maxsize = options.maxsize || null;\n    _this.rotationFormat = options.rotationFormat || false;\n    _this.zippedArchive = options.zippedArchive || false;\n    _this.maxFiles = options.maxFiles || null;\n    _this.eol = typeof options.eol === 'string' ? options.eol : os.EOL;\n    _this.tailable = options.tailable || false;\n    _this.lazy = options.lazy || false;\n\n    // Internal state variables representing the number of files this instance\n    // has created and the current size (in bytes) of the current logfile.\n    _this._size = 0;\n    _this._pendingSize = 0;\n    _this._created = 0;\n    _this._drain = false;\n    _this._opening = false;\n    _this._ending = false;\n    _this._fileExist = false;\n    if (_this.dirname) _this._createLogDirIfNotExist(_this.dirname);\n    if (!_this.lazy) _this.open();\n    return _this;\n  }\n  _createClass(File, [{\n    key: \"finishIfEnding\",\n    value: function finishIfEnding() {\n      var _this2 = this;\n      if (this._ending) {\n        if (this._opening) {\n          this.once('open', function () {\n            _this2._stream.once('finish', function () {\n              return _this2.emit('finish');\n            });\n            setImmediate(function () {\n              return _this2._stream.end();\n            });\n          });\n        } else {\n          this._stream.once('finish', function () {\n            return _this2.emit('finish');\n          });\n          setImmediate(function () {\n            return _this2._stream.end();\n          });\n        }\n      }\n    }\n\n    /**\n     * Core logging method exposed to Winston. Metadata is optional.\n     * @param {Object} info - TODO: add param description.\n     * @param {Function} callback - TODO: add param description.\n     * @returns {undefined}\n     */\n  }, {\n    key: \"log\",\n    value: function log(info) {\n      var _this3 = this;\n      var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};\n      // Remark: (jcrugzz) What is necessary about this callback(null, true) now\n      // when thinking about 3.x? Should silent be handled in the base\n      // TransportStream _write method?\n      if (this.silent) {\n        callback();\n        return true;\n      }\n\n      // Output stream buffer is full and has asked us to wait for the drain event\n      if (this._drain) {\n        this._stream.once('drain', function () {\n          _this3._drain = false;\n          _this3.log(info, callback);\n        });\n        return;\n      }\n      if (this._rotate) {\n        this._stream.once('rotate', function () {\n          _this3._rotate = false;\n          _this3.log(info, callback);\n        });\n        return;\n      }\n      if (this.lazy) {\n        if (!this._fileExist) {\n          if (!this._opening) {\n            this.open();\n          }\n          this.once('open', function () {\n            _this3._fileExist = true;\n            _this3.log(info, callback);\n            return;\n          });\n          return;\n        }\n        if (this._needsNewFile(this._pendingSize)) {\n          this._dest.once('close', function () {\n            if (!_this3._opening) {\n              _this3.open();\n            }\n            _this3.once('open', function () {\n              _this3.log(info, callback);\n              return;\n            });\n            return;\n          });\n          return;\n        }\n      }\n\n      // Grab the raw string and append the expected EOL.\n      var output = \"\".concat(info[MESSAGE]).concat(this.eol);\n      var bytes = Buffer.byteLength(output);\n\n      // After we have written to the PassThrough check to see if we need\n      // to rotate to the next file.\n      //\n      // Remark: This gets called too early and does not depict when data\n      // has been actually flushed to disk.\n      function logged() {\n        var _this4 = this;\n        this._size += bytes;\n        this._pendingSize -= bytes;\n        debug('logged %s %s', this._size, output);\n        this.emit('logged', info);\n\n        // Do not attempt to rotate files while rotating\n        if (this._rotate) {\n          return;\n        }\n\n        // Do not attempt to rotate files while opening\n        if (this._opening) {\n          return;\n        }\n\n        // Check to see if we need to end the stream and create a new one.\n        if (!this._needsNewFile()) {\n          return;\n        }\n        if (this.lazy) {\n          this._endStream(function () {\n            _this4.emit('fileclosed');\n          });\n          return;\n        }\n\n        // End the current stream, ensure it flushes and create a new one.\n        // This could potentially be optimized to not run a stat call but its\n        // the safest way since we are supporting `maxFiles`.\n        this._rotate = true;\n        this._endStream(function () {\n          return _this4._rotateFile();\n        });\n      }\n\n      // Keep track of the pending bytes being written while files are opening\n      // in order to properly rotate the PassThrough this._stream when the file\n      // eventually does open.\n      this._pendingSize += bytes;\n      if (this._opening && !this.rotatedWhileOpening && this._needsNewFile(this._size + this._pendingSize)) {\n        this.rotatedWhileOpening = true;\n      }\n      var written = this._stream.write(output, logged.bind(this));\n      if (!written) {\n        this._drain = true;\n        this._stream.once('drain', function () {\n          _this3._drain = false;\n          callback();\n        });\n      } else {\n        callback(); // eslint-disable-line callback-return\n      }\n      debug('written', written, this._drain);\n      this.finishIfEnding();\n      return written;\n    }\n\n    /**\n     * Query the transport. Options object is optional.\n     * @param {Object} options - Loggly-like query options for this instance.\n     * @param {function} callback - Continuation to respond to when complete.\n     * TODO: Refactor me.\n     */\n  }, {\n    key: \"query\",\n    value: function query(options, callback) {\n      if (typeof options === 'function') {\n        callback = options;\n        options = {};\n      }\n      options = normalizeQuery(options);\n      var file = path.join(this.dirname, this.filename);\n      var buff = '';\n      var results = [];\n      var row = 0;\n      var stream = fs.createReadStream(file, {\n        encoding: 'utf8'\n      });\n      stream.on('error', function (err) {\n        if (stream.readable) {\n          stream.destroy();\n        }\n        if (!callback) {\n          return;\n        }\n        return err.code !== 'ENOENT' ? callback(err) : callback(null, results);\n      });\n      stream.on('data', function (data) {\n        data = (buff + data).split(/\\n+/);\n        var l = data.length - 1;\n        var i = 0;\n        for (; i < l; i++) {\n          if (!options.start || row >= options.start) {\n            add(data[i]);\n          }\n          row++;\n        }\n        buff = data[l];\n      });\n      stream.on('close', function () {\n        if (buff) {\n          add(buff, true);\n        }\n        if (options.order === 'desc') {\n          results = results.reverse();\n        }\n\n        // eslint-disable-next-line callback-return\n        if (callback) callback(null, results);\n      });\n      function add(buff, attempt) {\n        try {\n          var log = JSON.parse(buff);\n          if (check(log)) {\n            push(log);\n          }\n        } catch (e) {\n          if (!attempt) {\n            stream.emit('error', e);\n          }\n        }\n      }\n      function push(log) {\n        if (options.rows && results.length >= options.rows && options.order !== 'desc') {\n          if (stream.readable) {\n            stream.destroy();\n          }\n          return;\n        }\n        if (options.fields) {\n          log = options.fields.reduce(function (obj, key) {\n            obj[key] = log[key];\n            return obj;\n          }, {});\n        }\n        if (options.order === 'desc') {\n          if (results.length >= options.rows) {\n            results.shift();\n          }\n        }\n        results.push(log);\n      }\n      function check(log) {\n        if (!log) {\n          return;\n        }\n        if (_typeof(log) !== 'object') {\n          return;\n        }\n        var time = new Date(log.timestamp);\n        if (options.from && time < options.from || options.until && time > options.until || options.level && options.level !== log.level) {\n          return;\n        }\n        return true;\n      }\n      function normalizeQuery(options) {\n        options = options || {};\n\n        // limit\n        options.rows = options.rows || options.limit || 10;\n\n        // starting row offset\n        options.start = options.start || 0;\n\n        // now\n        options.until = options.until || new Date();\n        if (_typeof(options.until) !== 'object') {\n          options.until = new Date(options.until);\n        }\n\n        // now - 24\n        options.from = options.from || options.until - 24 * 60 * 60 * 1000;\n        if (_typeof(options.from) !== 'object') {\n          options.from = new Date(options.from);\n        }\n\n        // 'asc' or 'desc'\n        options.order = options.order || 'desc';\n        return options;\n      }\n    }\n\n    /**\n     * Returns a log stream for this transport. Options object is optional.\n     * @param {Object} options - Stream options for this instance.\n     * @returns {Stream} - TODO: add return description.\n     * TODO: Refactor me.\n     */\n  }, {\n    key: \"stream\",\n    value: function stream() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var file = path.join(this.dirname, this.filename);\n      var stream = new Stream();\n      var tail = {\n        file: file,\n        start: options.start\n      };\n      stream.destroy = tailFile(tail, function (err, line) {\n        if (err) {\n          return stream.emit('error', err);\n        }\n        try {\n          stream.emit('data', line);\n          line = JSON.parse(line);\n          stream.emit('log', line);\n        } catch (e) {\n          stream.emit('error', e);\n        }\n      });\n      return stream;\n    }\n\n    /**\n     * Checks to see the filesize of.\n     * @returns {undefined}\n     */\n  }, {\n    key: \"open\",\n    value: function open() {\n      var _this5 = this;\n      // If we do not have a filename then we were passed a stream and\n      // don't need to keep track of size.\n      if (!this.filename) return;\n      if (this._opening) return;\n      this._opening = true;\n\n      // Stat the target file to get the size and create the stream.\n      this.stat(function (err, size) {\n        if (err) {\n          return _this5.emit('error', err);\n        }\n        debug('stat done: %s { size: %s }', _this5.filename, size);\n        _this5._size = size;\n        _this5._dest = _this5._createStream(_this5._stream);\n        _this5._opening = false;\n        _this5.once('open', function () {\n          if (_this5._stream.eventNames().includes('rotate')) {\n            _this5._stream.emit('rotate');\n          } else {\n            _this5._rotate = false;\n          }\n        });\n      });\n    }\n\n    /**\n     * Stat the file and assess information in order to create the proper stream.\n     * @param {function} callback - TODO: add param description.\n     * @returns {undefined}\n     */\n  }, {\n    key: \"stat\",\n    value: function stat(callback) {\n      var _this6 = this;\n      var target = this._getFile();\n      var fullpath = path.join(this.dirname, target);\n      fs.stat(fullpath, function (err, stat) {\n        if (err && err.code === 'ENOENT') {\n          debug('ENOENT ok', fullpath);\n          // Update internally tracked filename with the new target name.\n          _this6.filename = target;\n          return callback(null, 0);\n        }\n        if (err) {\n          debug(\"err \".concat(err.code, \" \").concat(fullpath));\n          return callback(err);\n        }\n        if (!stat || _this6._needsNewFile(stat.size)) {\n          // If `stats.size` is greater than the `maxsize` for this\n          // instance then try again.\n          return _this6._incFile(function () {\n            return _this6.stat(callback);\n          });\n        }\n\n        // Once we have figured out what the filename is, set it\n        // and return the size.\n        _this6.filename = target;\n        callback(null, stat.size);\n      });\n    }\n\n    /**\n     * Closes the stream associated with this instance.\n     * @param {function} cb - TODO: add param description.\n     * @returns {undefined}\n     */\n  }, {\n    key: \"close\",\n    value: function close(cb) {\n      var _this7 = this;\n      if (!this._stream) {\n        return;\n      }\n      this._stream.end(function () {\n        if (cb) {\n          cb(); // eslint-disable-line callback-return\n        }\n        _this7.emit('flush');\n        _this7.emit('closed');\n      });\n    }\n\n    /**\n     * TODO: add method description.\n     * @param {number} size - TODO: add param description.\n     * @returns {undefined}\n     */\n  }, {\n    key: \"_needsNewFile\",\n    value: function _needsNewFile(size) {\n      size = size || this._size;\n      return this.maxsize && size >= this.maxsize;\n    }\n\n    /**\n     * TODO: add method description.\n     * @param {Error} err - TODO: add param description.\n     * @returns {undefined}\n     */\n  }, {\n    key: \"_onError\",\n    value: function _onError(err) {\n      this.emit('error', err);\n    }\n\n    /**\n     * TODO: add method description.\n     * @param {Stream} stream - TODO: add param description.\n     * @returns {mixed} - TODO: add return description.\n     */\n  }, {\n    key: \"_setupStream\",\n    value: function _setupStream(stream) {\n      stream.on('error', this._onError);\n      return stream;\n    }\n\n    /**\n     * TODO: add method description.\n     * @param {Stream} stream - TODO: add param description.\n     * @returns {mixed} - TODO: add return description.\n     */\n  }, {\n    key: \"_cleanupStream\",\n    value: function _cleanupStream(stream) {\n      stream.removeListener('error', this._onError);\n      stream.destroy();\n      return stream;\n    }\n\n    /**\n     * TODO: add method description.\n     */\n  }, {\n    key: \"_rotateFile\",\n    value: function _rotateFile() {\n      var _this8 = this;\n      this._incFile(function () {\n        return _this8.open();\n      });\n    }\n\n    /**\n     * Unpipe from the stream that has been marked as full and end it so it\n     * flushes to disk.\n     *\n     * @param {function} callback - Callback for when the current file has closed.\n     * @private\n     */\n  }, {\n    key: \"_endStream\",\n    value: function _endStream() {\n      var _this9 = this;\n      var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function () {};\n      if (this._dest) {\n        this._stream.unpipe(this._dest);\n        this._dest.end(function () {\n          _this9._cleanupStream(_this9._dest);\n          callback();\n        });\n      } else {\n        callback(); // eslint-disable-line callback-return\n      }\n    }\n\n    /**\n     * Returns the WritableStream for the active file on this instance. If we\n     * should gzip the file then a zlib stream is returned.\n     *\n     * @param {ReadableStream} source –PassThrough to pipe to the file when open.\n     * @returns {WritableStream} Stream that writes to disk for the active file.\n     */\n  }, {\n    key: \"_createStream\",\n    value: function _createStream(source) {\n      var _this10 = this;\n      var fullpath = path.join(this.dirname, this.filename);\n      debug('create stream start', fullpath, this.options);\n      var dest = fs.createWriteStream(fullpath, this.options)\n      // TODO: What should we do with errors here?\n      .on('error', function (err) {\n        return debug(err);\n      }).on('close', function () {\n        return debug('close', dest.path, dest.bytesWritten);\n      }).on('open', function () {\n        debug('file open ok', fullpath);\n        _this10.emit('open', fullpath);\n        source.pipe(dest);\n\n        // If rotation occured during the open operation then we immediately\n        // start writing to a new PassThrough, begin opening the next file\n        // and cleanup the previous source and dest once the source has drained.\n        if (_this10.rotatedWhileOpening) {\n          _this10._stream = new PassThrough();\n          _this10._stream.setMaxListeners(30);\n          _this10._rotateFile();\n          _this10.rotatedWhileOpening = false;\n          _this10._cleanupStream(dest);\n          source.end();\n        }\n      });\n      debug('create stream ok', fullpath);\n      return dest;\n    }\n\n    /**\n     * TODO: add method description.\n     * @param {function} callback - TODO: add param description.\n     * @returns {undefined}\n     */\n  }, {\n    key: \"_incFile\",\n    value: function _incFile(callback) {\n      debug('_incFile', this.filename);\n      var ext = path.extname(this._basename);\n      var basename = path.basename(this._basename, ext);\n      var tasks = [];\n      if (this.zippedArchive) {\n        tasks.push(function (cb) {\n          var num = this._created > 0 && !this.tailable ? this._created : '';\n          this._compressFile(path.join(this.dirname, \"\".concat(basename).concat(num).concat(ext)), path.join(this.dirname, \"\".concat(basename).concat(num).concat(ext, \".gz\")), cb);\n        }.bind(this));\n      }\n      tasks.push(function (cb) {\n        if (!this.tailable) {\n          this._created += 1;\n          this._checkMaxFilesIncrementing(ext, basename, cb);\n        } else {\n          this._checkMaxFilesTailable(ext, basename, cb);\n        }\n      }.bind(this));\n      asyncSeries(tasks, callback);\n    }\n\n    /**\n     * Gets the next filename to use for this instance in the case that log\n     * filesizes are being capped.\n     * @returns {string} - TODO: add return description.\n     * @private\n     */\n  }, {\n    key: \"_getFile\",\n    value: function _getFile() {\n      var ext = path.extname(this._basename);\n      var basename = path.basename(this._basename, ext);\n      var isRotation = this.rotationFormat ? this.rotationFormat() : this._created;\n\n      // Caveat emptor (indexzero): rotationFormat() was broken by design When\n      // combined with max files because the set of files to unlink is never\n      // stored.\n      return !this.tailable && this._created ? \"\".concat(basename).concat(isRotation).concat(ext) : \"\".concat(basename).concat(ext);\n    }\n\n    /**\n     * Increment the number of files created or checked by this instance.\n     * @param {mixed} ext - TODO: add param description.\n     * @param {mixed} basename - TODO: add param description.\n     * @param {mixed} callback - TODO: add param description.\n     * @returns {undefined}\n     * @private\n     */\n  }, {\n    key: \"_checkMaxFilesIncrementing\",\n    value: function _checkMaxFilesIncrementing(ext, basename, callback) {\n      // Check for maxFiles option and delete file.\n      if (!this.maxFiles || this._created < this.maxFiles) {\n        return setImmediate(callback);\n      }\n      var oldest = this._created - this.maxFiles;\n      var isOldest = oldest !== 0 ? oldest : '';\n      var isZipped = this.zippedArchive ? '.gz' : '';\n      var filePath = \"\".concat(basename).concat(isOldest).concat(ext).concat(isZipped);\n      var target = path.join(this.dirname, filePath);\n      fs.unlink(target, callback);\n    }\n\n    /**\n     * Roll files forward based on integer, up to maxFiles. e.g. if base if\n     * file.log and it becomes oversized, roll to file1.log, and allow file.log\n     * to be re-used. If file is oversized again, roll file1.log to file2.log,\n     * roll file.log to file1.log, and so on.\n     * @param {mixed} ext - TODO: add param description.\n     * @param {mixed} basename - TODO: add param description.\n     * @param {mixed} callback - TODO: add param description.\n     * @returns {undefined}\n     * @private\n     */\n  }, {\n    key: \"_checkMaxFilesTailable\",\n    value: function _checkMaxFilesTailable(ext, basename, callback) {\n      var _this12 = this;\n      var tasks = [];\n      if (!this.maxFiles) {\n        return;\n      }\n\n      // const isZipped = this.zippedArchive ? '.gz' : '';\n      var isZipped = this.zippedArchive ? '.gz' : '';\n      for (var x = this.maxFiles - 1; x > 1; x--) {\n        tasks.push(function (i, cb) {\n          var _this11 = this;\n          var fileName = \"\".concat(basename).concat(i - 1).concat(ext).concat(isZipped);\n          var tmppath = path.join(this.dirname, fileName);\n          fs.exists(tmppath, function (exists) {\n            if (!exists) {\n              return cb(null);\n            }\n            fileName = \"\".concat(basename).concat(i).concat(ext).concat(isZipped);\n            fs.rename(tmppath, path.join(_this11.dirname, fileName), cb);\n          });\n        }.bind(this, x));\n      }\n      asyncSeries(tasks, function () {\n        fs.rename(path.join(_this12.dirname, \"\".concat(basename).concat(ext).concat(isZipped)), path.join(_this12.dirname, \"\".concat(basename, \"1\").concat(ext).concat(isZipped)), callback);\n      });\n    }\n\n    /**\n     * Compresses src to dest with gzip and unlinks src\n     * @param {string} src - path to source file.\n     * @param {string} dest - path to zipped destination file.\n     * @param {Function} callback - callback called after file has been compressed.\n     * @returns {undefined}\n     * @private\n     */\n  }, {\n    key: \"_compressFile\",\n    value: function _compressFile(src, dest, callback) {\n      fs.access(src, fs.F_OK, function (err) {\n        if (err) {\n          return callback();\n        }\n        var gzip = zlib.createGzip();\n        var inp = fs.createReadStream(src);\n        var out = fs.createWriteStream(dest);\n        out.on('finish', function () {\n          fs.unlink(src, callback);\n        });\n        inp.pipe(gzip).pipe(out);\n      });\n    }\n  }, {\n    key: \"_createLogDirIfNotExist\",\n    value: function _createLogDirIfNotExist(dirPath) {\n      /* eslint-disable no-sync */\n      if (!fs.existsSync(dirPath)) {\n        fs.mkdirSync(dirPath, {\n          recursive: true\n        });\n      }\n      /* eslint-enable no-sync */\n    }\n  }]);\n  return File;\n}(TransportStream);","map":{"version":3,"names":["_typeof","o","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","_toPropertyKey","key","_createClass","protoProps","staticProps","t","_toPrimitive","String","r","e","toPrimitive","call","Number","_callSuper","_getPrototypeOf","_possibleConstructorReturn","_isNativeReflectConstruct","Reflect","construct","apply","self","_assertThisInitialized","Boolean","valueOf","setPrototypeOf","getPrototypeOf","bind","__proto__","ReferenceError","_inherits","subClass","superClass","create","value","_setPrototypeOf","p","fs","require","path","asyncSeries","zlib","_require","MESSAGE","_require2","Stream","PassThrough","TransportStream","debug","os","tailFile","module","exports","_TransportStream","File","_this","options","arguments","undefined","name","throwIf","_len","args","Array","_key","slice","forEach","Error","concat","_stream","setMaxListeners","_onError","filename","dirname","_basename","basename","flags","stream","console","warn","_dest","pipe","_setupStream","maxsize","rotationFormat","zippedArchive","maxFiles","eol","EOL","tailable","lazy","_size","_pendingSize","_created","_drain","_opening","_ending","_fileExist","_createLogDirIfNotExist","open","finishIfEnding","_this2","once","emit","setImmediate","end","log","info","_this3","callback","silent","_rotate","_needsNewFile","output","bytes","Buffer","byteLength","logged","_this4","_endStream","_rotateFile","rotatedWhileOpening","written","write","query","normalizeQuery","file","join","buff","results","row","createReadStream","encoding","on","err","readable","destroy","code","data","split","l","start","add","order","reverse","attempt","JSON","parse","check","push","rows","fields","reduce","obj","shift","time","Date","timestamp","from","until","level","limit","tail","line","_this5","stat","size","_createStream","eventNames","includes","_this6","_getFile","fullpath","_incFile","close","cb","_this7","_cleanupStream","removeListener","_this8","_this9","unpipe","source","_this10","dest","createWriteStream","bytesWritten","ext","extname","tasks","num","_compressFile","_checkMaxFilesIncrementing","_checkMaxFilesTailable","isRotation","oldest","isOldest","isZipped","filePath","unlink","_this12","x","_this11","fileName","tmppath","exists","rename","src","access","F_OK","gzip","createGzip","inp","out","dirPath","existsSync","mkdirSync","recursive"],"sources":["/Users/josiah.huckins/Development/Perficient Blogging/react/aem-navigation-app/node_modules/winston/dist/winston/transports/file.js"],"sourcesContent":["/* eslint-disable complexity,max-statements */\n/**\n * file.js: Transport for outputting to a local log file.\n *\n * (C) 2010 Charlie Robbins\n * MIT LICENCE\n */\n\n'use strict';\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : String(i); }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nvar fs = require('fs');\nvar path = require('path');\nvar asyncSeries = require('async/series');\nvar zlib = require('zlib');\nvar _require = require('triple-beam'),\n  MESSAGE = _require.MESSAGE;\nvar _require2 = require('readable-stream'),\n  Stream = _require2.Stream,\n  PassThrough = _require2.PassThrough;\nvar TransportStream = require('winston-transport');\nvar debug = require('@dabh/diagnostics')('winston:file');\nvar os = require('os');\nvar tailFile = require('../tail-file');\n\n/**\n * Transport for outputting to a local log file.\n * @type {File}\n * @extends {TransportStream}\n */\nmodule.exports = /*#__PURE__*/function (_TransportStream) {\n  _inherits(File, _TransportStream);\n  /**\n   * Constructor function for the File transport object responsible for\n   * persisting log messages and metadata to one or more files.\n   * @param {Object} options - Options for this instance.\n   */\n  function File() {\n    var _this;\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _classCallCheck(this, File);\n    _this = _callSuper(this, File, [options]);\n\n    // Expose the name of this Transport on the prototype.\n    _this.name = options.name || 'file';\n\n    // Helper function which throws an `Error` in the event that any of the\n    // rest of the arguments is present in `options`.\n    function throwIf(target) {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n      args.slice(1).forEach(function (name) {\n        if (options[name]) {\n          throw new Error(\"Cannot set \".concat(name, \" and \").concat(target, \" together\"));\n        }\n      });\n    }\n\n    // Setup the base stream that always gets piped to to handle buffering.\n    _this._stream = new PassThrough();\n    _this._stream.setMaxListeners(30);\n\n    // Bind this context for listener methods.\n    _this._onError = _this._onError.bind(_assertThisInitialized(_this));\n    if (options.filename || options.dirname) {\n      throwIf('filename or dirname', 'stream');\n      _this._basename = _this.filename = options.filename ? path.basename(options.filename) : 'winston.log';\n      _this.dirname = options.dirname || path.dirname(options.filename);\n      _this.options = options.options || {\n        flags: 'a'\n      };\n    } else if (options.stream) {\n      // eslint-disable-next-line no-console\n      console.warn('options.stream will be removed in winston@4. Use winston.transports.Stream');\n      throwIf('stream', 'filename', 'maxsize');\n      _this._dest = _this._stream.pipe(_this._setupStream(options.stream));\n      _this.dirname = path.dirname(_this._dest.path);\n      // We need to listen for drain events when write() returns false. This\n      // can make node mad at times.\n    } else {\n      throw new Error('Cannot log to file without filename or stream.');\n    }\n    _this.maxsize = options.maxsize || null;\n    _this.rotationFormat = options.rotationFormat || false;\n    _this.zippedArchive = options.zippedArchive || false;\n    _this.maxFiles = options.maxFiles || null;\n    _this.eol = typeof options.eol === 'string' ? options.eol : os.EOL;\n    _this.tailable = options.tailable || false;\n    _this.lazy = options.lazy || false;\n\n    // Internal state variables representing the number of files this instance\n    // has created and the current size (in bytes) of the current logfile.\n    _this._size = 0;\n    _this._pendingSize = 0;\n    _this._created = 0;\n    _this._drain = false;\n    _this._opening = false;\n    _this._ending = false;\n    _this._fileExist = false;\n    if (_this.dirname) _this._createLogDirIfNotExist(_this.dirname);\n    if (!_this.lazy) _this.open();\n    return _this;\n  }\n  _createClass(File, [{\n    key: \"finishIfEnding\",\n    value: function finishIfEnding() {\n      var _this2 = this;\n      if (this._ending) {\n        if (this._opening) {\n          this.once('open', function () {\n            _this2._stream.once('finish', function () {\n              return _this2.emit('finish');\n            });\n            setImmediate(function () {\n              return _this2._stream.end();\n            });\n          });\n        } else {\n          this._stream.once('finish', function () {\n            return _this2.emit('finish');\n          });\n          setImmediate(function () {\n            return _this2._stream.end();\n          });\n        }\n      }\n    }\n\n    /**\n     * Core logging method exposed to Winston. Metadata is optional.\n     * @param {Object} info - TODO: add param description.\n     * @param {Function} callback - TODO: add param description.\n     * @returns {undefined}\n     */\n  }, {\n    key: \"log\",\n    value: function log(info) {\n      var _this3 = this;\n      var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};\n      // Remark: (jcrugzz) What is necessary about this callback(null, true) now\n      // when thinking about 3.x? Should silent be handled in the base\n      // TransportStream _write method?\n      if (this.silent) {\n        callback();\n        return true;\n      }\n\n      // Output stream buffer is full and has asked us to wait for the drain event\n      if (this._drain) {\n        this._stream.once('drain', function () {\n          _this3._drain = false;\n          _this3.log(info, callback);\n        });\n        return;\n      }\n      if (this._rotate) {\n        this._stream.once('rotate', function () {\n          _this3._rotate = false;\n          _this3.log(info, callback);\n        });\n        return;\n      }\n      if (this.lazy) {\n        if (!this._fileExist) {\n          if (!this._opening) {\n            this.open();\n          }\n          this.once('open', function () {\n            _this3._fileExist = true;\n            _this3.log(info, callback);\n            return;\n          });\n          return;\n        }\n        if (this._needsNewFile(this._pendingSize)) {\n          this._dest.once('close', function () {\n            if (!_this3._opening) {\n              _this3.open();\n            }\n            _this3.once('open', function () {\n              _this3.log(info, callback);\n              return;\n            });\n            return;\n          });\n          return;\n        }\n      }\n\n      // Grab the raw string and append the expected EOL.\n      var output = \"\".concat(info[MESSAGE]).concat(this.eol);\n      var bytes = Buffer.byteLength(output);\n\n      // After we have written to the PassThrough check to see if we need\n      // to rotate to the next file.\n      //\n      // Remark: This gets called too early and does not depict when data\n      // has been actually flushed to disk.\n      function logged() {\n        var _this4 = this;\n        this._size += bytes;\n        this._pendingSize -= bytes;\n        debug('logged %s %s', this._size, output);\n        this.emit('logged', info);\n\n        // Do not attempt to rotate files while rotating\n        if (this._rotate) {\n          return;\n        }\n\n        // Do not attempt to rotate files while opening\n        if (this._opening) {\n          return;\n        }\n\n        // Check to see if we need to end the stream and create a new one.\n        if (!this._needsNewFile()) {\n          return;\n        }\n        if (this.lazy) {\n          this._endStream(function () {\n            _this4.emit('fileclosed');\n          });\n          return;\n        }\n\n        // End the current stream, ensure it flushes and create a new one.\n        // This could potentially be optimized to not run a stat call but its\n        // the safest way since we are supporting `maxFiles`.\n        this._rotate = true;\n        this._endStream(function () {\n          return _this4._rotateFile();\n        });\n      }\n\n      // Keep track of the pending bytes being written while files are opening\n      // in order to properly rotate the PassThrough this._stream when the file\n      // eventually does open.\n      this._pendingSize += bytes;\n      if (this._opening && !this.rotatedWhileOpening && this._needsNewFile(this._size + this._pendingSize)) {\n        this.rotatedWhileOpening = true;\n      }\n      var written = this._stream.write(output, logged.bind(this));\n      if (!written) {\n        this._drain = true;\n        this._stream.once('drain', function () {\n          _this3._drain = false;\n          callback();\n        });\n      } else {\n        callback(); // eslint-disable-line callback-return\n      }\n      debug('written', written, this._drain);\n      this.finishIfEnding();\n      return written;\n    }\n\n    /**\n     * Query the transport. Options object is optional.\n     * @param {Object} options - Loggly-like query options for this instance.\n     * @param {function} callback - Continuation to respond to when complete.\n     * TODO: Refactor me.\n     */\n  }, {\n    key: \"query\",\n    value: function query(options, callback) {\n      if (typeof options === 'function') {\n        callback = options;\n        options = {};\n      }\n      options = normalizeQuery(options);\n      var file = path.join(this.dirname, this.filename);\n      var buff = '';\n      var results = [];\n      var row = 0;\n      var stream = fs.createReadStream(file, {\n        encoding: 'utf8'\n      });\n      stream.on('error', function (err) {\n        if (stream.readable) {\n          stream.destroy();\n        }\n        if (!callback) {\n          return;\n        }\n        return err.code !== 'ENOENT' ? callback(err) : callback(null, results);\n      });\n      stream.on('data', function (data) {\n        data = (buff + data).split(/\\n+/);\n        var l = data.length - 1;\n        var i = 0;\n        for (; i < l; i++) {\n          if (!options.start || row >= options.start) {\n            add(data[i]);\n          }\n          row++;\n        }\n        buff = data[l];\n      });\n      stream.on('close', function () {\n        if (buff) {\n          add(buff, true);\n        }\n        if (options.order === 'desc') {\n          results = results.reverse();\n        }\n\n        // eslint-disable-next-line callback-return\n        if (callback) callback(null, results);\n      });\n      function add(buff, attempt) {\n        try {\n          var log = JSON.parse(buff);\n          if (check(log)) {\n            push(log);\n          }\n        } catch (e) {\n          if (!attempt) {\n            stream.emit('error', e);\n          }\n        }\n      }\n      function push(log) {\n        if (options.rows && results.length >= options.rows && options.order !== 'desc') {\n          if (stream.readable) {\n            stream.destroy();\n          }\n          return;\n        }\n        if (options.fields) {\n          log = options.fields.reduce(function (obj, key) {\n            obj[key] = log[key];\n            return obj;\n          }, {});\n        }\n        if (options.order === 'desc') {\n          if (results.length >= options.rows) {\n            results.shift();\n          }\n        }\n        results.push(log);\n      }\n      function check(log) {\n        if (!log) {\n          return;\n        }\n        if (_typeof(log) !== 'object') {\n          return;\n        }\n        var time = new Date(log.timestamp);\n        if (options.from && time < options.from || options.until && time > options.until || options.level && options.level !== log.level) {\n          return;\n        }\n        return true;\n      }\n      function normalizeQuery(options) {\n        options = options || {};\n\n        // limit\n        options.rows = options.rows || options.limit || 10;\n\n        // starting row offset\n        options.start = options.start || 0;\n\n        // now\n        options.until = options.until || new Date();\n        if (_typeof(options.until) !== 'object') {\n          options.until = new Date(options.until);\n        }\n\n        // now - 24\n        options.from = options.from || options.until - 24 * 60 * 60 * 1000;\n        if (_typeof(options.from) !== 'object') {\n          options.from = new Date(options.from);\n        }\n\n        // 'asc' or 'desc'\n        options.order = options.order || 'desc';\n        return options;\n      }\n    }\n\n    /**\n     * Returns a log stream for this transport. Options object is optional.\n     * @param {Object} options - Stream options for this instance.\n     * @returns {Stream} - TODO: add return description.\n     * TODO: Refactor me.\n     */\n  }, {\n    key: \"stream\",\n    value: function stream() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var file = path.join(this.dirname, this.filename);\n      var stream = new Stream();\n      var tail = {\n        file: file,\n        start: options.start\n      };\n      stream.destroy = tailFile(tail, function (err, line) {\n        if (err) {\n          return stream.emit('error', err);\n        }\n        try {\n          stream.emit('data', line);\n          line = JSON.parse(line);\n          stream.emit('log', line);\n        } catch (e) {\n          stream.emit('error', e);\n        }\n      });\n      return stream;\n    }\n\n    /**\n     * Checks to see the filesize of.\n     * @returns {undefined}\n     */\n  }, {\n    key: \"open\",\n    value: function open() {\n      var _this5 = this;\n      // If we do not have a filename then we were passed a stream and\n      // don't need to keep track of size.\n      if (!this.filename) return;\n      if (this._opening) return;\n      this._opening = true;\n\n      // Stat the target file to get the size and create the stream.\n      this.stat(function (err, size) {\n        if (err) {\n          return _this5.emit('error', err);\n        }\n        debug('stat done: %s { size: %s }', _this5.filename, size);\n        _this5._size = size;\n        _this5._dest = _this5._createStream(_this5._stream);\n        _this5._opening = false;\n        _this5.once('open', function () {\n          if (_this5._stream.eventNames().includes('rotate')) {\n            _this5._stream.emit('rotate');\n          } else {\n            _this5._rotate = false;\n          }\n        });\n      });\n    }\n\n    /**\n     * Stat the file and assess information in order to create the proper stream.\n     * @param {function} callback - TODO: add param description.\n     * @returns {undefined}\n     */\n  }, {\n    key: \"stat\",\n    value: function stat(callback) {\n      var _this6 = this;\n      var target = this._getFile();\n      var fullpath = path.join(this.dirname, target);\n      fs.stat(fullpath, function (err, stat) {\n        if (err && err.code === 'ENOENT') {\n          debug('ENOENT ok', fullpath);\n          // Update internally tracked filename with the new target name.\n          _this6.filename = target;\n          return callback(null, 0);\n        }\n        if (err) {\n          debug(\"err \".concat(err.code, \" \").concat(fullpath));\n          return callback(err);\n        }\n        if (!stat || _this6._needsNewFile(stat.size)) {\n          // If `stats.size` is greater than the `maxsize` for this\n          // instance then try again.\n          return _this6._incFile(function () {\n            return _this6.stat(callback);\n          });\n        }\n\n        // Once we have figured out what the filename is, set it\n        // and return the size.\n        _this6.filename = target;\n        callback(null, stat.size);\n      });\n    }\n\n    /**\n     * Closes the stream associated with this instance.\n     * @param {function} cb - TODO: add param description.\n     * @returns {undefined}\n     */\n  }, {\n    key: \"close\",\n    value: function close(cb) {\n      var _this7 = this;\n      if (!this._stream) {\n        return;\n      }\n      this._stream.end(function () {\n        if (cb) {\n          cb(); // eslint-disable-line callback-return\n        }\n        _this7.emit('flush');\n        _this7.emit('closed');\n      });\n    }\n\n    /**\n     * TODO: add method description.\n     * @param {number} size - TODO: add param description.\n     * @returns {undefined}\n     */\n  }, {\n    key: \"_needsNewFile\",\n    value: function _needsNewFile(size) {\n      size = size || this._size;\n      return this.maxsize && size >= this.maxsize;\n    }\n\n    /**\n     * TODO: add method description.\n     * @param {Error} err - TODO: add param description.\n     * @returns {undefined}\n     */\n  }, {\n    key: \"_onError\",\n    value: function _onError(err) {\n      this.emit('error', err);\n    }\n\n    /**\n     * TODO: add method description.\n     * @param {Stream} stream - TODO: add param description.\n     * @returns {mixed} - TODO: add return description.\n     */\n  }, {\n    key: \"_setupStream\",\n    value: function _setupStream(stream) {\n      stream.on('error', this._onError);\n      return stream;\n    }\n\n    /**\n     * TODO: add method description.\n     * @param {Stream} stream - TODO: add param description.\n     * @returns {mixed} - TODO: add return description.\n     */\n  }, {\n    key: \"_cleanupStream\",\n    value: function _cleanupStream(stream) {\n      stream.removeListener('error', this._onError);\n      stream.destroy();\n      return stream;\n    }\n\n    /**\n     * TODO: add method description.\n     */\n  }, {\n    key: \"_rotateFile\",\n    value: function _rotateFile() {\n      var _this8 = this;\n      this._incFile(function () {\n        return _this8.open();\n      });\n    }\n\n    /**\n     * Unpipe from the stream that has been marked as full and end it so it\n     * flushes to disk.\n     *\n     * @param {function} callback - Callback for when the current file has closed.\n     * @private\n     */\n  }, {\n    key: \"_endStream\",\n    value: function _endStream() {\n      var _this9 = this;\n      var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function () {};\n      if (this._dest) {\n        this._stream.unpipe(this._dest);\n        this._dest.end(function () {\n          _this9._cleanupStream(_this9._dest);\n          callback();\n        });\n      } else {\n        callback(); // eslint-disable-line callback-return\n      }\n    }\n\n    /**\n     * Returns the WritableStream for the active file on this instance. If we\n     * should gzip the file then a zlib stream is returned.\n     *\n     * @param {ReadableStream} source –PassThrough to pipe to the file when open.\n     * @returns {WritableStream} Stream that writes to disk for the active file.\n     */\n  }, {\n    key: \"_createStream\",\n    value: function _createStream(source) {\n      var _this10 = this;\n      var fullpath = path.join(this.dirname, this.filename);\n      debug('create stream start', fullpath, this.options);\n      var dest = fs.createWriteStream(fullpath, this.options)\n      // TODO: What should we do with errors here?\n      .on('error', function (err) {\n        return debug(err);\n      }).on('close', function () {\n        return debug('close', dest.path, dest.bytesWritten);\n      }).on('open', function () {\n        debug('file open ok', fullpath);\n        _this10.emit('open', fullpath);\n        source.pipe(dest);\n\n        // If rotation occured during the open operation then we immediately\n        // start writing to a new PassThrough, begin opening the next file\n        // and cleanup the previous source and dest once the source has drained.\n        if (_this10.rotatedWhileOpening) {\n          _this10._stream = new PassThrough();\n          _this10._stream.setMaxListeners(30);\n          _this10._rotateFile();\n          _this10.rotatedWhileOpening = false;\n          _this10._cleanupStream(dest);\n          source.end();\n        }\n      });\n      debug('create stream ok', fullpath);\n      return dest;\n    }\n\n    /**\n     * TODO: add method description.\n     * @param {function} callback - TODO: add param description.\n     * @returns {undefined}\n     */\n  }, {\n    key: \"_incFile\",\n    value: function _incFile(callback) {\n      debug('_incFile', this.filename);\n      var ext = path.extname(this._basename);\n      var basename = path.basename(this._basename, ext);\n      var tasks = [];\n      if (this.zippedArchive) {\n        tasks.push(function (cb) {\n          var num = this._created > 0 && !this.tailable ? this._created : '';\n          this._compressFile(path.join(this.dirname, \"\".concat(basename).concat(num).concat(ext)), path.join(this.dirname, \"\".concat(basename).concat(num).concat(ext, \".gz\")), cb);\n        }.bind(this));\n      }\n      tasks.push(function (cb) {\n        if (!this.tailable) {\n          this._created += 1;\n          this._checkMaxFilesIncrementing(ext, basename, cb);\n        } else {\n          this._checkMaxFilesTailable(ext, basename, cb);\n        }\n      }.bind(this));\n      asyncSeries(tasks, callback);\n    }\n\n    /**\n     * Gets the next filename to use for this instance in the case that log\n     * filesizes are being capped.\n     * @returns {string} - TODO: add return description.\n     * @private\n     */\n  }, {\n    key: \"_getFile\",\n    value: function _getFile() {\n      var ext = path.extname(this._basename);\n      var basename = path.basename(this._basename, ext);\n      var isRotation = this.rotationFormat ? this.rotationFormat() : this._created;\n\n      // Caveat emptor (indexzero): rotationFormat() was broken by design When\n      // combined with max files because the set of files to unlink is never\n      // stored.\n      return !this.tailable && this._created ? \"\".concat(basename).concat(isRotation).concat(ext) : \"\".concat(basename).concat(ext);\n    }\n\n    /**\n     * Increment the number of files created or checked by this instance.\n     * @param {mixed} ext - TODO: add param description.\n     * @param {mixed} basename - TODO: add param description.\n     * @param {mixed} callback - TODO: add param description.\n     * @returns {undefined}\n     * @private\n     */\n  }, {\n    key: \"_checkMaxFilesIncrementing\",\n    value: function _checkMaxFilesIncrementing(ext, basename, callback) {\n      // Check for maxFiles option and delete file.\n      if (!this.maxFiles || this._created < this.maxFiles) {\n        return setImmediate(callback);\n      }\n      var oldest = this._created - this.maxFiles;\n      var isOldest = oldest !== 0 ? oldest : '';\n      var isZipped = this.zippedArchive ? '.gz' : '';\n      var filePath = \"\".concat(basename).concat(isOldest).concat(ext).concat(isZipped);\n      var target = path.join(this.dirname, filePath);\n      fs.unlink(target, callback);\n    }\n\n    /**\n     * Roll files forward based on integer, up to maxFiles. e.g. if base if\n     * file.log and it becomes oversized, roll to file1.log, and allow file.log\n     * to be re-used. If file is oversized again, roll file1.log to file2.log,\n     * roll file.log to file1.log, and so on.\n     * @param {mixed} ext - TODO: add param description.\n     * @param {mixed} basename - TODO: add param description.\n     * @param {mixed} callback - TODO: add param description.\n     * @returns {undefined}\n     * @private\n     */\n  }, {\n    key: \"_checkMaxFilesTailable\",\n    value: function _checkMaxFilesTailable(ext, basename, callback) {\n      var _this12 = this;\n      var tasks = [];\n      if (!this.maxFiles) {\n        return;\n      }\n\n      // const isZipped = this.zippedArchive ? '.gz' : '';\n      var isZipped = this.zippedArchive ? '.gz' : '';\n      for (var x = this.maxFiles - 1; x > 1; x--) {\n        tasks.push(function (i, cb) {\n          var _this11 = this;\n          var fileName = \"\".concat(basename).concat(i - 1).concat(ext).concat(isZipped);\n          var tmppath = path.join(this.dirname, fileName);\n          fs.exists(tmppath, function (exists) {\n            if (!exists) {\n              return cb(null);\n            }\n            fileName = \"\".concat(basename).concat(i).concat(ext).concat(isZipped);\n            fs.rename(tmppath, path.join(_this11.dirname, fileName), cb);\n          });\n        }.bind(this, x));\n      }\n      asyncSeries(tasks, function () {\n        fs.rename(path.join(_this12.dirname, \"\".concat(basename).concat(ext).concat(isZipped)), path.join(_this12.dirname, \"\".concat(basename, \"1\").concat(ext).concat(isZipped)), callback);\n      });\n    }\n\n    /**\n     * Compresses src to dest with gzip and unlinks src\n     * @param {string} src - path to source file.\n     * @param {string} dest - path to zipped destination file.\n     * @param {Function} callback - callback called after file has been compressed.\n     * @returns {undefined}\n     * @private\n     */\n  }, {\n    key: \"_compressFile\",\n    value: function _compressFile(src, dest, callback) {\n      fs.access(src, fs.F_OK, function (err) {\n        if (err) {\n          return callback();\n        }\n        var gzip = zlib.createGzip();\n        var inp = fs.createReadStream(src);\n        var out = fs.createWriteStream(dest);\n        out.on('finish', function () {\n          fs.unlink(src, callback);\n        });\n        inp.pipe(gzip).pipe(out);\n      });\n    }\n  }, {\n    key: \"_createLogDirIfNotExist\",\n    value: function _createLogDirIfNotExist(dirPath) {\n      /* eslint-disable no-sync */\n      if (!fs.existsSync(dirPath)) {\n        fs.mkdirSync(dirPath, {\n          recursive: true\n        });\n      }\n      /* eslint-enable no-sync */\n    }\n  }]);\n  return File;\n}(TransportStream);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
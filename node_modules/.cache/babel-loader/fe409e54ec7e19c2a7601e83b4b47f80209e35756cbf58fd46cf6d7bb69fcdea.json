{"ast":null,"code":"/*\nCopyright 2019 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nconst debug = require('debug');\nclass DebugLogger {\n  constructor(config) {\n    this.config = config;\n    debug.formatters.s = this.getFormat();\n    debug.formatters.d = this.getFormat();\n    debug.log = this.getDestination();\n    // make sure to always take into account the latest DEBUG env var\n    debug.enable(process.env.DEBUG);\n    if (debug.enabled(this.config.label)) {\n      // => if we are here it means process.env.DEBUG === this.config.label\n      // (`${this.config.label}*` will also match the condition but it will set all log levels anyways)\n      // if let's say process.env.DEBUG === `${this.config.label}:debug` then we won't get\n      // into this branch and only debug logs will be shown\n      debug.enable(this.getDebugLevel());\n    }\n    this.errorLogger = debug(config.label).extend('error');\n    this.warnLogger = debug(config.label).extend('warn');\n    this.infoLogger = debug(config.label).extend('info');\n    this.verboseLogger = debug(config.label).extend('verbose');\n    this.debugLogger = debug(config.label).extend('debug');\n    this.sillyLogger = debug(config.label).extend('silly');\n  }\n  getFormat() {\n    return message => {\n      return message;\n    };\n  }\n  getDestination() {\n    return message => {\n      console.log(message);\n    };\n  }\n  getDebugLevel() {\n    let debugLevel;\n    const label = this.config.label;\n    switch (this.config.level) {\n      case 'error':\n        debugLevel = label + ':error';\n        break;\n      case 'warn':\n        debugLevel = label + ':error,' + label + ':warn';\n        break;\n      case 'info':\n        debugLevel = label + ':error,' + label + ':warn,' + label + ':info';\n        break;\n      case 'verbose':\n        debugLevel = label + ':error,' + label + ':warn,' + label + ':info,' + label + ':verbose';\n        break;\n      case 'debug':\n        debugLevel = label + ':error,' + label + ':warn,' + label + ':info,' + label + ':verbose,' + label + ':debug';\n        break;\n      case 'silly':\n        debugLevel = label + ':*';\n        break;\n    }\n    return process.env.DEBUG + ',' + debugLevel;\n  }\n  close() {\n    // TODO\n  }\n  error(...args) {\n    this.errorLogger(...args);\n  }\n  warn(...args) {\n    this.warnLogger(...args);\n  }\n  info(...args) {\n    this.infoLogger(...args);\n  }\n  verbose(...args) {\n    this.verboseLogger(...args);\n  }\n  debug(...args) {\n    this.debugLogger(...args);\n  }\n  silly(...args) {\n    this.sillyLogger(...args);\n  }\n}\nmodule.exports = DebugLogger;","map":{"version":3,"names":["debug","require","DebugLogger","constructor","config","formatters","s","getFormat","d","log","getDestination","enable","process","env","DEBUG","enabled","label","getDebugLevel","errorLogger","extend","warnLogger","infoLogger","verboseLogger","debugLogger","sillyLogger","message","console","debugLevel","level","close","error","args","warn","info","verbose","silly","module","exports"],"sources":["/Users/josiah.huckins/Development/Perficient Blogging/react/aem-navigation-app/node_modules/@adobe/aio-lib-core-logging/src/DebugLogger.js"],"sourcesContent":["/*\nCopyright 2019 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nconst debug = require('debug')\n\nclass DebugLogger {\n  constructor (config) {\n    this.config = config\n    debug.formatters.s = this.getFormat()\n    debug.formatters.d = this.getFormat()\n    debug.log = this.getDestination()\n    // make sure to always take into account the latest DEBUG env var\n    debug.enable(process.env.DEBUG)\n    if (debug.enabled(this.config.label)) {\n      // => if we are here it means process.env.DEBUG === this.config.label\n      // (`${this.config.label}*` will also match the condition but it will set all log levels anyways)\n      // if let's say process.env.DEBUG === `${this.config.label}:debug` then we won't get\n      // into this branch and only debug logs will be shown\n      debug.enable(this.getDebugLevel())\n    }\n    this.errorLogger = debug(config.label).extend('error')\n    this.warnLogger = debug(config.label).extend('warn')\n    this.infoLogger = debug(config.label).extend('info')\n    this.verboseLogger = debug(config.label).extend('verbose')\n    this.debugLogger = debug(config.label).extend('debug')\n    this.sillyLogger = debug(config.label).extend('silly')\n  }\n\n  getFormat () {\n    return (message) => {\n      return message\n    }\n  }\n\n  getDestination () {\n    return (message) => {\n      console.log(message)\n    }\n  }\n\n  getDebugLevel () {\n    let debugLevel\n    const label = this.config.label\n    switch (this.config.level) {\n      case 'error' :\n        debugLevel = label + ':error'\n        break\n      case 'warn' :\n        debugLevel = label + ':error,' + label + ':warn'\n        break\n      case 'info' :\n        debugLevel = label + ':error,' + label + ':warn,' + label + ':info'\n        break\n      case 'verbose' :\n        debugLevel = label + ':error,' + label + ':warn,' + label + ':info,' + label + ':verbose'\n        break\n      case 'debug' :\n        debugLevel = label + ':error,' + label + ':warn,' + label + ':info,' + label + ':verbose,' + label + ':debug'\n        break\n      case 'silly' :\n        debugLevel = label + ':*'\n        break\n    }\n    return process.env.DEBUG + ',' + debugLevel\n  }\n\n  close () {\n    // TODO\n  }\n\n  error (...args) {\n    this.errorLogger(...args)\n  }\n\n  warn (...args) {\n    this.warnLogger(...args)\n  }\n\n  info (...args) {\n    this.infoLogger(...args)\n  }\n\n  verbose (...args) {\n    this.verboseLogger(...args)\n  }\n\n  debug (...args) {\n    this.debugLogger(...args)\n  }\n\n  silly (...args) {\n    this.sillyLogger(...args)\n  }\n}\n\nmodule.exports = DebugLogger\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}